/*!re2c
    digit = [0-9] ;
    integer = digit ('_'? digit)* ;
    hex_digit = [0-9a-fA-F] ;
    hex_integer = hex_digit ('_'? hex_digit)* ;
    exponent = 'e' ('+' | '-')? integer ;

    letter = [a-zA-Z] ;
    letter_or_digit = letter | digit ;

    delimiter = (" "|" "|"\n"|"\t"|"\v"|"\r"|"\f")+ ;

    operator_and = '"' "and" '"' ;
    operator_or = '"' "or" '"' ;
    operator_nand = '"' "nand" '"' ;
    operator_nor = '"' "nor" '"' ;
    operator_xor = '"' "xor" '"' ;
    operator_xnor = '"' "xnor" '"' ;
    operator_eq = '"' "=" '"' ;
    operator_neq = '"' "/=" '"' ;
    operator_lt = '"' "<" '"' ;
    operator_lte = '"' "<=" '"' ;
    operator_gt = '"' ">" '"' ;
    operator_gte = '"' ">=" '"' ;
    operator_sll = '"' "sll" '"' ;
    operator_srl = '"' "srl" '"' ;
    operator_sla = '"' "sla" '"' ;
    operator_sra = '"' "sra" '"' ;
    operator_rol = '"' "rol" '"' ;
    operator_ror = '"' "ror" '"' ;
    operator_plus = '"' "+" '"' ;
    operator_minus = '"' "-" '"' ;
    operator_ampersand = '"' "&" '"' ;
    operator_mul = '"' "*" '"' ;
    operator_div = '"' "/" '"' ;
    operator_mod = '"' "mod" '"' ;
    operator_rem = '"' "rem" '"' ;
    operator_exp = '"' "**" '"' ;
    operator_abs = '"' "abs" '"' ;
    operator_not = '"' "not" '"' ;


    comment = '--' (.*) ;
    bitstring_literal = ('b'|'o'|'x') '"' hex_integer? '"' ;
    character_literal = "'" . "'" ;
    string_literal = '"' ( . | '""' )* '"' ;
    basic_identifier = letter ('_'? letter_or_digit)* ;
    extended_identifier = "\\" ( . | "\\\\" )+ "\\" ;
    based_literal = integer '#' hex_integer ('.' hex_integer)? '#' exponent? ;
    decimal_literal = integer ('.' integer)? exponent? ;

    reserved_abs = 'abs' ;
    reserved_access = 'access' ;
    reserved_after = 'after' ;
    reserved_alias = 'alias' ;
    reserved_all = 'all' ;
    reserved_and = 'and' ;
    reserved_architecture = 'architecture' ;
    reserved_array = 'array' ;
    reserved_assert = 'assert' ;
    reserved_begin = 'begin' ;
    reserved_block = 'block' ;
    reserved_body =  'body' ;
    reserved_buffer = 'buffer' ;
    reserved_bus = 'bus' ;
    reserved_case = 'case' ;
    reserved_component = 'component' ;
    reserved_configuration = 'configuration' ;
    reserved_constant = 'constant' ;
    reserved_disconnect = 'disconnect' ;
    reserved_downto = 'downto' ;
    reserved_else = 'else' ;
    reserved_elsif = 'elsif' ;
    reserved_end = 'end' ;
    reserved_entity = 'entity' ;
    reserved_exit = 'exit' ;
    reserved_file = 'file' ;
    reserved_for = 'for' ;
    reserved_function = 'function' ;
    reserved_generate = 'generate' ;
    reserved_generic = 'generic' ;
    reserved_group = 'group' ;
    reserved_guarded = 'guarded' ;
    reserved_if = 'if' ;
    reserved_impure = 'impure' ;
    reserved_in = 'in' ;
    reserved_inertial = 'inertial' ;
    reserved_inout = 'inout' ;
    reserved_is = 'is' ;
    reserved_label = 'label' ;
    reserved_library = 'library' ;
    reserved_linkage = 'linkage' ;
    reserved_literal = 'literal' ;
    reserved_loop = 'loop' ;
    reserved_map = 'map' ;
    reserved_mod = 'mod' ;
    reserved_nand = 'nand' ;
    reserved_new = 'new' ;
    reserved_next = 'next' ;
    reserved_nor = 'nor' ;
    reserved_not = 'not' ;
    reserved_null = 'null' ;
    reserved_of = 'of' ;
    reserved_on = 'on' ;
    reserved_open = 'open' ;
    reserved_or =  'or' ;
    reserved_others = 'others' ;
    reserved_out = 'out' ;
    reserved_package = 'package' ;
    reserved_port = 'port' ;
    reserved_postponed = 'postponed' ;
    reserved_procedural = 'procedural' ;
    reserved_procedure = 'procedure' ;
    reserved_process = 'process' ;
    reserved_protected = 'protected' ;
    reserved_pure = 'pure' ;
    reserved_range = 'range' ;
    reserved_record = 'record' ;
    reserved_reference = 'reference' ;
    reserved_register = 'register' ;
    reserved_reject = 'reject' ;
    reserved_rem = 'rem' ;
    reserved_report = 'report' ;
    reserved_return = 'return' ;
    reserved_rol = 'rol' ;
    reserved_ror = 'ror' ;
    reserved_select = 'select' ;
    reserved_severity = 'severity' ;
    reserved_signal = 'signal' ;
    reserved_shared = 'shared' ;
    reserved_sla = 'sla' ;
    reserved_sll = 'sll' ;
    reserved_sra = 'sra' ;
    reserved_srl = 'srl' ;
    reserved_subtype = 'subtype' ;
    reserved_then =  'then' ;
    reserved_to = 'to' ;
    reserved_transport = 'transport' ;
    reserved_type = 'type' ;
    reserved_unaffected = 'unaffected' ;
    reserved_units = 'units' ;
    reserved_until = 'until' ;
    reserved_use = 'use' ;
    reserved_variable = 'variable' ;
    reserved_wait = 'wait' ;
    reserved_when = 'when' ;
    reserved_while = 'while' ;
    reserved_with = 'with' ;
    reserved_xnor = 'xnor' ;
    reserved_xor = 'xor' ;

    delim_arrow = "=>" ;
    delim_box = "<>" ;
    delim_double_star = "**" ;
    delim_gt_or_equal = ">=" ;
    delim_inequality = "/=" ;
    delim_lt_or_equal = "<=" ;
    delim_var_assignment = ":=" ;

    delim_ampersand = "&" ;
    delim_apostrophe = "'" ;
    delim_asterisk = "*" ;
    delim_colon = ":" ;
    delim_comma = "," ;
    delim_dot = "." ;
    delim_equals_sign = "=" ;
    delim_greater_than_sign = ">" ;
    delim_hyphen = "-" ;
    delim_left_paren = "(" ;
    delim_left_square_bracket = "[" ;
    delim_less_than_sign = "<" ;
    delim_plus_sign = "+" ;
    delim_right_paren = ")" ;
    delim_right_square_bracket = "]" ;
    delim_semicolon = ";" ;
    delim_slash = "/" ;
    delim_vertical_line = "|" ;
*/